<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="net.sf.persism.TestPostgreSQL" time="4.152" tests="10" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="javafx.runtime.version" value="8.0.202-b07"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Pablo\git\Persism\target\test-classes;C:\Users\Pablo\git\Persism\target\classes;C:\Users\Pablo\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Pablo\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\testcontainers\1.15.2\testcontainers-1.15.2.jar;C:\Users\Pablo\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\Pablo\.m2\repository\org\apache\commons\commons-compress\1.20\commons-compress-1.20.jar;C:\Users\Pablo\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\Pablo\.m2\repository\org\rnorth\visible-assertions\visible-assertions\2.1.2\visible-assertions-2.1.2.jar;C:\Users\Pablo\.m2\repository\net\java\dev\jna\jna\5.2.0\jna-5.2.0.jar;C:\Users\Pablo\.m2\repository\com\github\docker-java\docker-java-api\3.2.7\docker-java-api-3.2.7.jar;C:\Users\Pablo\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.3\jackson-annotations-2.10.3.jar;C:\Users\Pablo\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.2.7\docker-java-transport-zerodep-3.2.7.jar;C:\Users\Pablo\.m2\repository\com\github\docker-java\docker-java-transport\3.2.7\docker-java-transport-3.2.7.jar;C:\Users\Pablo\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\Pablo\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\Pablo\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Pablo\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Pablo\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Pablo\.m2\repository\org\firebirdsql\jdbc\jaybird\4.0.2.java8\jaybird-4.0.2.java8.jar;C:\Users\Pablo\.m2\repository\javax\resource\connector-api\1.5\connector-api-1.5.jar;C:\Users\Pablo\.m2\repository\org\antlr\antlr4-runtime\4.7.2\antlr4-runtime-4.7.2.jar;C:\Users\Pablo\.m2\repository\org\firebirdsql\firebird-testcontainers-java\1.1.0\firebird-testcontainers-java-1.1.0.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\jdbc\1.15.1\jdbc-1.15.1.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\database-commons\1.15.1\database-commons-1.15.1.jar;C:\Users\Pablo\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Pablo\.m2\repository\org\hsqldb\hsqldb\2.5.1\hsqldb-2.5.1-debug.jar;C:\Users\Pablo\.m2\repository\org\apache\derby\derby\10.8.2.2\derby-10.8.2.2.jar;C:\Users\Pablo\.m2\repository\com\microsoft\sqlserver\mssql-jdbc\9.2.0.jre8\mssql-jdbc-9.2.0.jre8.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\mssqlserver\1.15.2\mssqlserver-1.15.2.jar;C:\Users\Pablo\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\Pablo\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\mysql\1.15.2\mysql-1.15.2.jar;C:\Users\Pablo\.m2\repository\net\sourceforge\jtds\jtds\1.3.1\jtds-1.3.1.jar;C:\Users\Pablo\.m2\repository\com\oracle\database\jdbc\ojdbc10\19.10.0.0\ojdbc10-19.10.0.0.jar;C:\Users\Pablo\.m2\repository\org\postgresql\postgresql\9.2-1004-jdbc41\postgresql-9.2-1004-jdbc41.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\postgresql\1.15.2\postgresql-1.15.2.jar;C:\Users\Pablo\.m2\repository\org\xerial\sqlite-jdbc\3.34.0\sqlite-jdbc-3.34.0.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="America/Buenos_Aires"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="javafx.version" value="8.0.202"/>
    <property name="user.country" value="AU"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Soft\Java\jdk1.8.0_202\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\Pablo\AppData\Local\Temp\surefire7323336141932651537\surefirebooter2595030419258399533.jar C:\Users\Pablo\AppData\Local\Temp\surefire7323336141932651537 2021-03-18T23-00-45_390-jvmRun1 surefire9212570202436401424tmp surefire_0890313867790695531tmp"/>
    <property name="surefire.test.class.path" value="C:\Users\Pablo\git\Persism\target\test-classes;C:\Users\Pablo\git\Persism\target\classes;C:\Users\Pablo\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Pablo\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\testcontainers\1.15.2\testcontainers-1.15.2.jar;C:\Users\Pablo\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\Pablo\.m2\repository\org\apache\commons\commons-compress\1.20\commons-compress-1.20.jar;C:\Users\Pablo\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\Pablo\.m2\repository\org\rnorth\visible-assertions\visible-assertions\2.1.2\visible-assertions-2.1.2.jar;C:\Users\Pablo\.m2\repository\net\java\dev\jna\jna\5.2.0\jna-5.2.0.jar;C:\Users\Pablo\.m2\repository\com\github\docker-java\docker-java-api\3.2.7\docker-java-api-3.2.7.jar;C:\Users\Pablo\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.3\jackson-annotations-2.10.3.jar;C:\Users\Pablo\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.2.7\docker-java-transport-zerodep-3.2.7.jar;C:\Users\Pablo\.m2\repository\com\github\docker-java\docker-java-transport\3.2.7\docker-java-transport-3.2.7.jar;C:\Users\Pablo\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\Pablo\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\Pablo\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Pablo\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Pablo\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Pablo\.m2\repository\org\firebirdsql\jdbc\jaybird\4.0.2.java8\jaybird-4.0.2.java8.jar;C:\Users\Pablo\.m2\repository\javax\resource\connector-api\1.5\connector-api-1.5.jar;C:\Users\Pablo\.m2\repository\org\antlr\antlr4-runtime\4.7.2\antlr4-runtime-4.7.2.jar;C:\Users\Pablo\.m2\repository\org\firebirdsql\firebird-testcontainers-java\1.1.0\firebird-testcontainers-java-1.1.0.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\jdbc\1.15.1\jdbc-1.15.1.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\database-commons\1.15.1\database-commons-1.15.1.jar;C:\Users\Pablo\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Pablo\.m2\repository\org\hsqldb\hsqldb\2.5.1\hsqldb-2.5.1-debug.jar;C:\Users\Pablo\.m2\repository\org\apache\derby\derby\10.8.2.2\derby-10.8.2.2.jar;C:\Users\Pablo\.m2\repository\com\microsoft\sqlserver\mssql-jdbc\9.2.0.jre8\mssql-jdbc-9.2.0.jre8.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\mssqlserver\1.15.2\mssqlserver-1.15.2.jar;C:\Users\Pablo\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\Pablo\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\mysql\1.15.2\mysql-1.15.2.jar;C:\Users\Pablo\.m2\repository\net\sourceforge\jtds\jtds\1.3.1\jtds-1.3.1.jar;C:\Users\Pablo\.m2\repository\com\oracle\database\jdbc\ojdbc10\19.10.0.0\ojdbc10-19.10.0.0.jar;C:\Users\Pablo\.m2\repository\org\postgresql\postgresql\9.2-1004-jdbc41\postgresql-9.2-1004-jdbc41.jar;C:\Users\Pablo\.m2\repository\org\testcontainers\postgresql\1.15.2\postgresql-1.15.2.jar;C:\Users\Pablo\.m2\repository\org\xerial\sqlite-jdbc\3.34.0\sqlite-jdbc-3.34.0.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Pablo"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="org.testcontainers.shaded.io.netty.packagePrefix" value="org.testcontainers.shaded."/>
    <property name="java.home" value="C:\Soft\Java\jdk1.8.0_202\jre"/>
    <property name="basedir" value="C:\Users\Pablo\git\Persism"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\Pablo\AppData\Local\Temp\surefire7323336141932651537\surefirebooter2595030419258399533.jar"/>
    <property name="sun.boot.class.path" value="C:\Soft\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Soft\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Soft\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Soft\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Soft\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Soft\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Soft\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Soft\Java\jdk1.8.0_202\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_202-b08"/>
    <property name="user.name" value="Pablo"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="C:\Soft\Java\jdk1.8.0_202\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Pablo\.m2\repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Pablo\AppData\Local\Temp\"/>
    <property name="java.version" value="1.8.0_202"/>
    <property name="user.dir" value="C:\Users\Pablo\git\Persism"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Soft\Java\jdk1.8.0_202\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Soft\Java\jdk1.8.0_202\bin;C:\Program Files\AdoptOpenJDK\jre-11.0.9.11-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Microsoft VS Code\bin;C:\Soft\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Users\Pablo\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.2.2\bin;;C:\Soft\scripts;%JAVA_HOME%\bin;C:\Soft\apache-maven-3.6.3\bin;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.202-b08"/>
    <property name="java.ext.dirs" value="C:\Soft\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testContactTable" classname="net.sf.persism.TestPostgreSQL" time="0.39">
    <system-out><![CDATA[INFO  Mar 18 23:04:35 docker[postgres:9.6.12] - Creating container for image: postgres:9.6.12
INFO  Mar 18 23:04:35 docker[postgres:9.6.12] - Starting container with ID: 609c9ac80e26531a46c232dc99731802149ffae10b7b8281acf218a36afc2de3
INFO  Mar 18 23:04:37 docker[postgres:9.6.12] - Container postgres:9.6.12 is starting: 609c9ac80e26531a46c232dc99731802149ffae10b7b8281acf218a36afc2de3
INFO  Mar 18 23:04:44 docker[postgres:9.6.12] - Container postgres:9.6.12 started in PT9.375S
INFO  Mar 18 23:04:44 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - Local Date: 1994-02-17T10:23:43.997 INSTANT: 1994-02-17T10:23:43.997Z
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - Local Date: 2021-03-18T23:04:45.168 INSTANT: 2021-03-19T02:04:45.168Z
WARN  Mar 18 23:04:45 net.sf.persism.MetaData - Property not found for column: testinstant class: class net.sf.persism.dao.Contact
WARN  Mar 18 23:04:45 net.sf.persism.MetaData - Property not found for column: testinstant2 class: class net.sf.persism.dao.Contact
WARN  Mar 18 23:04:45 net.sf.persism.Session - Possible overflow column amountowed - Target type is FLOAT and Value type is DOUBLE net.sf.persism.Session.readColumn(Session.java:780)
INFO  Mar 18 23:04:45 net.sf.persism.Session - No properties changed. No update required for Object: Contact{identity=d316ad81-946d-416b-98e3-3f3b03aa73db, partnerId=a0d00c5a-3de6-4ae8-ba11-e3e02c2b3a83, type='X', firstname='Fred', lastname='Flintstone', contactName='Fred Flintstone', company='Grouch Inc', division='Y', email='null', address1='123 Sesame Street', address2='Appt #0 (garbage can)', city='Philly?', stateProvince='null', zipPostalCode='null', country='US', dateAdded=1998-02-17, lastModified=1997-02-17 10:23:43.123, amountOwed=100.23, notes='B:AH B:AH VBLAH
 BLAH BLAY!', whatTimeIsIt=10:23:52} class: net.sf.persism.dao.Contact
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CONTACT: Contact{identity=d316ad81-946d-416b-98e3-3f3b03aa73db, partnerId=a0d00c5a-3de6-4ae8-ba11-e3e02c2b3a83, type='X ', firstname='Fred', lastname='Flintstone', contactName='Fred Flintstone', company='Grouch Inc', division='Y', email='null', address1='123 Sesame Street', address2='Appt #0 (garbage can)', city='Philly?', stateProvince='null', zipPostalCode='null', country='US', dateAdded=1998-02-17, lastModified=1997-02-17 10:23:43.123, amountOwed=100.23, notes='B:AH B:AH VBLAH
 BLAH BLAY!', whatTimeIsIt=10:23:52}
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - contact after insert/update before commit/rollback: Contact{identity=7c3010b3-0f3a-4aec-b6c7-2f48157e0ab6, partnerId=a0d00c5a-3de6-4ae8-ba11-e3e02c2b3a83, type='X ', firstname='Fred', lastname='Flintstone', contactName='HELLO?!', company='Grouch Inc', division='DIVISION X', email='null', address1='123 Sesame Street', address2='Appt #0 (garbage can)', city='Philly?', stateProvince='null', zipPostalCode='null', country='US', dateAdded=1998-02-17, lastModified=1997-02-17 10:23:43.123, amountOwed=100.23, notes='B:AH B:AH VBLAH
 BLAH BLAY!', whatTimeIsIt=10:23:52}
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - FAILS?: net.sf.persism.PersismException: ERROR: relation "missing" does not exist
  Position: 15
INFO  Mar 18 23:04:45 net.sf.persism.TestPostgreSQL - contact after insert: Contact{identity=79e0a9e8-8857-11eb-ae75-0242ac110009, partnerId=null, type='X ', firstname='Fred', lastname='Flintstone', contactName='Fred Flintstone', company='Grouch Inc', division='DIVISION X', email='null', address1='123 Sesame Street', address2='Appt #0 (garbage can)', city='Philly?', stateProvince='null', zipPostalCode='null', country='US', dateAdded=2021-03-18, lastModified=2021-03-17 19:18:05.318, amountOwed=100.23, notes='B:AH B:AH VBLAH
 BLAH BLAY!', whatTimeIsIt=23:04:45}
]]></system-out>
  </testcase>
  <testcase name="testAllDates" classname="net.sf.persism.TestPostgreSQL" time="0.499">
    <system-out><![CDATA[INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:45 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - udate: Mon Feb 17 22:23:41 ARST 1992 698372621107
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - sdate: 1992-02-17 698372621107
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - ts: 1992-02-17 22:23:41.107
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - time: 22:23:41
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - BEFORE: DateTestSQLTypes{id=1, description='test 1', dateOnly=1992-02-17, timeOnly=22:23:41, dateAndTime=1992-02-17 22:23:41.107, utilDateAndTime=Mon Feb 17 22:23:41 ARST 1992}
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - AFTER:  DateTestSQLTypes{id=1, description='test 1', dateOnly=1992-02-17, timeOnly=22:23:41, dateAndTime=1992-02-17 22:23:41.107, utilDateAndTime=Mon Feb 17 22:23:41 ARST 1992}
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - [DateTestSQLTypes{id=1, description='test 1', dateOnly=1992-02-17, timeOnly=22:23:41, dateAndTime=1992-02-17 22:23:41.107, utilDateAndTime=Mon Feb 17 22:23:41 ARST 1992}]
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - ldt: 1998-02-17T10:23:43.567
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - ld : 1997-02-17
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - lt : 10:23:43.567
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - BEFORE: DateTestLocalTypes{id=1, description='test 1', dateOnly=1997-02-17, timeOnly=10:23:43.567, dateAndTime=1998-02-17T10:23:43.567}
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - AFTER:  DateTestLocalTypes{id=1, description='test 1', dateOnly=1997-02-17, timeOnly=10:23:43, dateAndTime=1998-02-17T10:23:43.567}
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - [DateTestLocalTypes{id=1, description='test 1', dateOnly=1997-02-17, timeOnly=10:23:43, dateAndTime=1998-02-17T10:23:43.567}, DateTestLocalTypes{id=2, description='time later in the day to test awfulness of SQLite', dateOnly=null, timeOnly=22:23:41, dateAndTime=null}]
]]></system-out>
  </testcase>
  <testcase name="testDefaultDate" classname="net.sf.persism.TestPostgreSQL" time="0.529">
    <system-out><![CDATA[INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:45 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:45 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:45 net.sf.persism.TestPostgreSQL - Customer{customerId='MOO', companyName='Rock Quarry Ltd', contactName='FRED', contactTitle='null', address='null', city='null', region=null, postalCode='null', country='US', phone='null', fax='null', dateRegistered=2021-03-18 23:04:45.983, dateOfLastOrder=null}
INFO  Mar 18 23:04:45 net.sf.persism.TestPostgreSQL - date 2021-03-18
INFO  Mar 18 23:04:45 net.sf.persism.TestPostgreSQL - datetime 2021-03-18T23:04:45.980
INFO  Mar 18 23:04:46 net.sf.persism.TestPostgreSQL - []
INFO  Mar 18 23:04:46 net.sf.persism.TestPostgreSQL - rows insetred 1
INFO  Mar 18 23:04:46 net.sf.persism.TestPostgreSQL - resultset? null
INFO  Mar 18 23:04:46 net.sf.persism.TestPostgreSQL - 1 identity uuid 7a490682-8857-11eb-8d82-0242ac110009
]]></system-out>
  </testcase>
  <testcase name="testStoredProcs" classname="net.sf.persism.TestPostgreSQL" time="0.388">
    <system-out><![CDATA[INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:46 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
]]></system-out>
  </testcase>
  <testcase name="testQueryResult" classname="net.sf.persism.TestPostgreSQL" time="0.461">
    <system-out><![CDATA[INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:46 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - SELECT c.Customer_ID, c.Company_Name, o.ID Order_ID, o.Name AS Description, o.Date_Paid, o.Created AS DateCreated, o.PAID  FROM Orders o JOIN Customers c ON o.Customer_ID = c.Customer_ID
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - [CustomerOrder{customerId='123', companyName='ABC INC', description='ORDER 1', orderId=1, dateCreated=Thu Mar 18 00:00:00 ART 2021, datePaid=Thu Mar 18 23:04:46 ART 2021, paid=true}, CustomerOrder{customerId='123', companyName='ABC INC', description='ORDER 2', orderId=2, dateCreated=Thu Mar 18 00:00:00 ART 2021, datePaid=null, paid=false}, CustomerOrder{customerId='456', companyName='XYZ INC', description='ORDER 3', orderId=3, dateCreated=Thu Mar 18 00:00:00 ART 2021, datePaid=null, paid=false}, CustomerOrder{customerId='456', companyName='XYZ INC', description='ORDER 4', orderId=4, dateCreated=Thu Mar 18 00:00:00 ART 2021, datePaid=null, paid=false}]
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - date created? Thu Mar 18 00:00:00 ART 2021
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - date paid? Thu Mar 18 23:04:46 ART 2021
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - date created? Thu Mar 18 00:00:00 ART 2021
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - date paid? null
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - date created? Thu Mar 18 00:00:00 ART 2021
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - date paid? null
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - date created? Thu Mar 18 00:00:00 ART 2021
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - date paid? null
]]></system-out>
  </testcase>
  <testcase name="testReadPrimitive" classname="net.sf.persism.TestPostgreSQL" time="0.313">
    <system-out><![CDATA[INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:46 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:46 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
WARN  Mar 18 23:04:47 net.sf.persism.Session - Possible overflow column id - Target type is INT and Value type is LONG net.sf.persism.Session.fetch(Session.java:463)
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - [2021-03-18]
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - 2021-03-18
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - [2021-03-18]
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - 2021-03-18
]]></system-out>
  </testcase>
  <testcase name="testDates" classname="net.sf.persism.TestPostgreSQL" time="0.325">
    <system-out><![CDATA[INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:47 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - []
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - 2012-05-28T01:01:01
INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - 2011-06-12 18:52:25.0
]]></system-out>
  </testcase>
  <testcase name="testQueryWithSpecificColumnsWhereCaseDoesNotMatch" classname="net.sf.persism.TestPostgreSQL" time="0.572">
    <system-out><![CDATA[INFO  Mar 18 23:04:47 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:48 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - testQueryWithSpecificColumnsWhereCaseDoesNotMatch with : jdbc:postgresql://localhost:49402/pinf?loggerLevel=OFF
ERROR Mar 18 23:04:48 net.sf.persism.BaseTest - Object class net.sf.persism.dao.Customer was not properly initialized. Some properties not initialized by the queried columns: [country, phone] Missing:[contact_name, address, date_of_last_order, testlocaldatetime, city, date_registered, testlocaldate, company_name, customer_id, fax, postal_code, region, contact_title, status]
net.sf.persism.PersismException: Object class net.sf.persism.dao.Customer was not properly initialized. Some properties not initialized by the queried columns: [country, phone] Missing:[contact_name, address, date_of_last_order, testlocaldatetime, city, date_registered, testlocaldate, company_name, customer_id, fax, postal_code, region, contact_title, status]
	at net.sf.persism.Session.query(Session.java:412)
	at net.sf.persism.BaseTest.testQueryWithSpecificColumnsWhereCaseDoesNotMatch(BaseTest.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: net.sf.persism.PersismException: Object class net.sf.persism.dao.Customer was not properly initialized. Some properties not initialized by the queried columns: [country, phone] Missing:[contact_name, address, date_of_last_order, testlocaldatetime, city, date_registered, testlocaldate, company_name, customer_id, fax, postal_code, region, contact_title, status]
	at net.sf.persism.Session.readObject(Session.java:641)
	at net.sf.persism.Session.query(Session.java:404)
	... 33 common frames omitted
Caused by: java.lang.Throwable: Object class net.sf.persism.dao.Customer was not properly initialized. Some properties not initialized by the queried columns: [country, phone] Missing:[contact_name, address, date_of_last_order, testlocaldatetime, city, date_registered, testlocaldate, company_name, customer_id, fax, postal_code, region, contact_title, status]
	at net.sf.persism.PersismException.<init>(PersismException.java:18)
	... 35 common frames omitted
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - [Customer{customerId='MOO', companyName='TEST', contactName='fred flintstone', contactTitle='Lord', address='123 sesame street', city='city', region=North, postalCode='54321', country='US', phone='456-678-1234', fax='123-456-7890', dateRegistered=2021-03-18 23:04:48.327, dateOfLastOrder=null}]
]]></system-out>
  </testcase>
  <testcase name="testRefreshObject" classname="net.sf.persism.TestPostgreSQL" time="0.342">
    <system-out><![CDATA[INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:48 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - testRefreshObject with : jdbc:postgresql://localhost:49402/pinf?loggerLevel=OFF
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - 2021-03-18 = ? 2021-03-18
]]></system-out>
  </testcase>
  <testcase name="testGetDbMetaData" classname="net.sf.persism.TestPostgreSQL" time="0.333">
    <system-out><![CDATA[INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INFO  Mar 18 23:04:48 net.sf.persism.BaseTest - CREATE TYPE Regions AS ENUM ('North', 'South', 'East', 'West');
WARN  Mar 18 23:04:48 net.sf.persism.TestPostgreSQL - ERROR: type "regions" already exists
org.postgresql.util.PSQLException: ERROR: type "regions" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2157)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1886)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:559)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:403)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:395)
	at net.sf.persism.BaseTest.executeCommand(BaseTest.java:745)
	at net.sf.persism.TestPostgreSQL.createTables(TestPostgreSQL.java:124)
	at net.sf.persism.TestPostgreSQL.setUp(TestPostgreSQL.java:47)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - DROP TABLE Orders
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - CREATE TABLE Orders (  ID SERIAL PRIMARY KEY,  NAME VARCHAR(30) NULL,  PAID BOOLEAN NULL,  Customer_ID VARCHAR(10) NULL,  Created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Paid TIMESTAMP NULL,  Date_Something TIMESTAMP NULL ) 
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - DROP TABLE Customers
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - CREATE TABLE Customers (  Customer_ID VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v1(),  Company_Name VARCHAR(30) NULL,  Contact_Name VARCHAR(30) NULL,  Contact_Title VARCHAR(10) NULL,  Address VARCHAR(40) NULL,  City VARCHAR(30) NULL,  Region Regions NULL,  Postal_Code VARCHAR(10) NULL,  Country VARCHAR(2) NOT NULL DEFAULT 'US',  Phone VARCHAR(30) NULL,  Fax VARCHAR(30) NULL,  STATUS CHAR(1),  Date_Registered TIMESTAMP with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,  Date_Of_Last_Order DATE,  TestLocalDate DATE,  TestLocalDateTime TIMESTAMP  ) 
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - DROP TABLE Invoices
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - CREATE TABLE Invoices (  Invoice_ID SERIAL PRIMARY KEY,  Customer_ID varchar(10) NOT NULL,  Paid BOOLEAN NOT NULL,  Price NUMERIC(7,3) NOT NULL,  Quantity INT NOT NULL,  Total NUMERIC(10,3) NOT NULL ) 
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - DROP TABLE TABLEMULTIPRIMARY
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - CREATE TABLE TABLEMULTIPRIMARY (  CUSTOMER_NAME VARCHAR(30) NOT NULL,  Field4 VARCHAR(30),  Field5  TIMESTAMP with time zone,  ID INT NOT NULL ) 
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - ALTER TABLE TABLEMULTIPRIMARY ADD PRIMARY KEY (ID, CUSTOMER_NAME)
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - DROP TABLE Contacts
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - CREATE TABLE Contacts (  identity uuid PRIMARY KEY DEFAULT uuid_generate_v1(),  PartnerID uuid NULL,  Type char(2) NOT NULL,  Firstname varchar(50) NULL,  Lastname varchar(50) NULL,  ContactName varchar(50) NULL,  Company varchar(50) NULL,  Division varchar(50) NULL,  Email varchar(50) NULL,  Address1 varchar(50) NULL,  Address2 varchar(50) NULL,  City varchar(50) NULL,  StateProvince varchar(50) NULL,  ZipPostalCode varchar(10) NULL,  Country varchar(50) NULL,  Status SMALLINT NOT NULL,  DateAdded Timestamp NULL,  LastModified Timestamp NULL,  Notes text NULL,  AmountOwed float NULL,  BigInt DECIMAL(20) NULL,  SomeDate Timestamp NULL,  TestINstant Timestamp NULL,  TestINstant2 Timestamp NULL,  WhatMiteIsIt time NULL,  WhatTimeIsIt time NULL ) 
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - DROP TABLE DateTestLocalTypes
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - CREATE TABLE DateTestLocalTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, DateAndTime TIMESTAMP) 
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - DROP TABLE DateTestSQLTypes
INFO  Mar 18 23:04:49 net.sf.persism.BaseTest - CREATE TABLE DateTestSQLTypes (  ID INT,  Description VARCHAR(100),  DateOnly DATE,  TimeOnly TIME, UtilDateAndTime TIMESTAMP, DateAndTime TIMESTAMP) 
]]></system-out>
  </testcase>
</testsuite>